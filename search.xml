<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>first-blog</title>
    <url>/2025/03/02/35/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>魇爹镇楼</p>
<p><img src="/../images/4554.png" alt="4554"></p>
]]></content>
      <tags>
        <tag>地狱笑话</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo入门搭建~</title>
    <url>/2025/03/02/40/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="各类基础hexo指令"><a href="#各类基础hexo指令" class="headerlink" title="各类基础hexo指令"></a>各类基础hexo指令</h1><h2 id="常见部署指令"><a href="#常见部署指令" class="headerlink" title="常见部署指令"></a>常见部署指令</h2><p>一键更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 	// 一定要先 clean，防止灵异事件发生</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>本地服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>创建新文章</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n name</span><br></pre></td></tr></table></figure>

<p>部署到网站</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>生成静态文件到默认的public</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g //如果遇到灵异事件删除public文件</span><br></pre></td></tr></table></figure>

<p>常用组合拳</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s </span><br><span class="line">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p>草稿</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new draft &quot;new draft&quot;</span><br></pre></td></tr></table></figure>

<p>会在source&#x2F;_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</p>
<p>启动server</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo server --drafts</span><br></pre></td></tr></table></figure>

<p>草稿变文章</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>文章可以拥有如下属性：</p>
<table>
<thead>
<tr>
<th align="center">-</th>
<th>Setting</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td>layout</td>
<td>Layout</td>
<td>post或page</td>
</tr>
<tr>
<td align="center">2</td>
<td>title</td>
<td>文章的标题</td>
<td></td>
</tr>
<tr>
<td align="center">3</td>
<td>date</td>
<td>创建日期</td>
<td>文件的创建日期</td>
</tr>
<tr>
<td align="center">4</td>
<td>updated</td>
<td>修改日期</td>
<td>文件的修改日期</td>
</tr>
<tr>
<td align="center">5</td>
<td>comments</td>
<td>是否开启评论</td>
<td>true</td>
</tr>
<tr>
<td align="center">6</td>
<td>tags</td>
<td>标签</td>
<td></td>
</tr>
<tr>
<td align="center">7</td>
<td>categories</td>
<td>分类</td>
<td></td>
</tr>
<tr>
<td align="center">8</td>
<td>permalink</td>
<td>url中的名字</td>
<td>文件名</td>
</tr>
</tbody></table>
<h2 id="书写博客相关指令以及博客默认内容调整"><a href="#书写博客相关指令以及博客默认内容调整" class="headerlink" title="书写博客相关指令以及博客默认内容调整"></a>书写博客相关指令以及博客默认内容调整</h2><p>创建文章前要先选定模板，在hexo中也叫做布局。hexo支持三种布局（layout）：post(默认)、draft、page。</p>
<p>在博客目录下输入以下命令时，会默认使用post布局，然后自动在source_posts目录生成一个text1.md文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n text1</span><br></pre></td></tr></table></figure>

<p>也可以选择指定布局</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n [layout_name] draft1</span><br></pre></td></tr></table></figure>

<p>该命令创建了一个使用特定布局的名为draft1的文章。</p>
<p>创建一个新的.md文件可以看到文章开头的内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 赛学博士</span><br><span class="line">top: 0</span><br><span class="line">copyright: true</span><br><span class="line">date: 2025-03-04 23:05:21</span><br><span class="line">updated: 2025-03-04 23:05:21</span><br><span class="line">permalink:</span><br><span class="line">password:</span><br><span class="line">comments:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br></pre></td></tr></table></figure>

<p>想要更改其中内容可以到<code>scaffolds/</code>目录下的三个.md文件进行修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">updated: &#123;&#123; date &#125;&#125;</span><br><span class="line">permalink: </span><br><span class="line">top: 0</span><br><span class="line">password:</span><br><span class="line">comments: </span><br><span class="line">copyright: true</span><br><span class="line">tags:</span><br><span class="line">categories: </span><br><span class="line">keywords:</span><br><span class="line">description:</span><br></pre></td></tr></table></figure>

<p>可以直接这样设置，由于本人使用Typora编辑，所以头尾的“—”都省去。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>赛学博士</title>
    <url>/2025/03/04/21/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>天启星魂镇楼</p>
<p><img src="/../images/4677.png" alt="4677"></p>
<h1 id="关于pvp一个完整回合的阶段及其判定流程"><a href="#关于pvp一个完整回合的阶段及其判定流程" class="headerlink" title="关于pvp一个完整回合的阶段及其判定流程"></a>关于pvp一个完整回合的阶段及其判定流程</h1><h2 id="回合开始前"><a href="#回合开始前" class="headerlink" title="*回合开始前*"></a><em><strong>*回合开始前*</strong></em></h2><p>读秒阶段</p>
<p>出战时</p>
<p>除击杀控无法看到，其他效果读秒阶段就可以看到</p>
<h2 id="出战后"><a href="#出战后" class="headerlink" title="*出战后*"></a><em><strong>*出战后*</strong></em></h2><p>读秒阶段看不见</p>
<p>操作时双切</p>
<h2 id="登场时"><a href="#登场时" class="headerlink" title="*登场时*"></a><em><strong>*登场时*</strong></em></h2><p>首回合挑战方、房主判定</p>
<p>同切拼手速</p>
<p>次数效果被驱逐消失</p>
<p>回合开始时（先判定房主，后判定挑战方）</p>
<p>顺序：精灵魂印、套装</p>
<h2 id="战斗阶段"><a href="#战斗阶段" class="headerlink" title="*战斗阶段*"></a><em><strong>*战斗阶段*</strong></em></h2><p>出手流程开始时，烧伤、冻伤、中毒、流血判定</p>
<p>技能命中前（例如命中前断回合）</p>
<p>技能命中时</p>
<p>技能效果生效时</p>
<p>技能内部顺序，先后判断</p>
<p>一次性、不涉及增伤效果</p>
<p>造成攻击伤害前</p>
<p>绝大部分回合类效果生效</p>
<p>火王魂印会将回合类效果生效前断掉</p>
<p>注：这里的回合类效果，是每回合发生一次的效果，回合弹控、免断覆盖整个回合，不在此。</p>
<p>****造成伤害前—–瞬杀—–犀牛回满血—–通用增伤节点—–护盾—–通用减伤节点—–通用锁伤****节点—–通用挡伤节点—–造成攻击伤害</p>
<p>受到伤害为零</p>
<p>无法触发“造成伤害高于&#x2F;低于n时”的效果</p>
<p>无法触发“收到&#x2F;造成攻击伤害后”效果</p>
<h2 id="受到攻击后"><a href="#受到攻击后" class="headerlink" title="*受到攻击后*"></a><em><strong>*受到攻击后*</strong></em></h2><p>有些需要命中触发，有些不需要</p>
<h2 id="使用技能后"><a href="#使用技能后" class="headerlink" title="*使用技能后*"></a><em><strong>*使用技能后*</strong></em></h2><p>与受到攻击后重叠，后续可能优化。现有情况是受击方先进行判定</p>
<h2 id="出手流程结束时"><a href="#出手流程结束时" class="headerlink" title="*出手流程结束时*"></a><em><strong>*出手流程结束时*</strong></em></h2><p>部分魂印靠后结算</p>
<h2 id="回合结束时"><a href="#回合结束时" class="headerlink" title="*回合结束时*"></a><em><strong>*回合结束时*</strong></em></h2><p>先精灵魂印、在套装</p>
<p>至少一方选择出手，先手方先触发</p>
<p>双方均未出手，房主房先触发</p>
<p>先手击杀、先手自爆，跳过回合结束时效果</p>
<h2 id="回合结束后"><a href="#回合结束后" class="headerlink" title="*回合结束后*"></a><em><strong>*回合结束后*</strong></em></h2><p>未被击败、被击败—–未击败对手、击败对手时—–被击败后—–击败对手后（待定）</p>
<p>插入型效果</p>
<p>回合弹控、免断、免弱，削弱，续航，只有一回合会在回合开始时开始，回合结束后的回合扣减点停止，两回合时第一回合所有阶段全覆盖。</p>
<h1 id="伤害计算、变威力技能、以及各增伤节点判断"><a href="#伤害计算、变威力技能、以及各增伤节点判断" class="headerlink" title="伤害计算、变威力技能、以及各增伤节点判断"></a>伤害计算、变威力技能、以及各增伤节点判断</h1><h2 id="伤害计算公式"><a href="#伤害计算公式" class="headerlink" title="伤害计算公式"></a>伤害计算公式</h2><p>[(攻击方的等级×0.4+2)×技能威力×攻击方的攻击÷防御方的防御÷50+2]×本系修正×克制系数×(217~255)÷255 </p>
<p>这一串公式计算出的叫做裸伤。技能后续增减伤都是在此基础加减乘除。</p>
<h2 id="伤害流程"><a href="#伤害流程" class="headerlink" title="伤害流程"></a>伤害流程</h2><p>裸伤计算完毕后，就进入增减伤作用区间。</p>
<p><img src="/../images/2e93f960c481a2169e627d5382676831c0a981c4.png" alt="2e93f960c481a2169e627d5382676831c0a981c4"></p>
<p>按照先后顺序到最后形成最终红伤。</p>
<p>主要是保底、锁伤位置影响较大。</p>
<h1 id="精灵配招以及pvp环境应对策略"><a href="#精灵配招以及pvp环境应对策略" class="headerlink" title="精灵配招以及pvp环境应对策略"></a>精灵配招以及pvp环境应对策略</h1><h2 id="苍月影（脸狗）"><a href="#苍月影（脸狗）" class="headerlink" title="*苍月影（脸狗）*"></a><em><strong>*苍月影（脸狗）*</strong></em></h2><p>配招：银歌夜舞+双属性+神秘石之力s</p>
<p>未冰封先制加一，使用技能50%冰封，未触发消回合。使用攻击技能，攻击时处于冰封扣三分之一粉，不是冰封吸三分之一粉</p>
<p>弦月锋华：4回合弹控，下一次盖，下2回合先制加2</p>
<p>过星皇：如果开命宇，先三加第五，随后神秘石</p>
<p>暗王：我方强化，敌方无强化，先三抬走</p>
<p>灯使：先手勇，但先手三分之一粉会无效</p>
<p>枫眠：保证身上有盖，叠第五，控住以后保证没有盖，开强化第五击杀</p>
<p>北鸟：祈祷冰封不触发，垒第五粉</p>
<p>鬼蝶：先手勇，miss也有魂印</p>
<p>尤里米特：在缭乱后接弦月锋华断回合（处于强化时）</p>
<p>灵巢：第五加弦月锋华，防止强化第五加洄还</p>
<p>参考文献:</p>
<p><a href="https://www.bilibili.com/opus/797383381966913537#:~:text=%E9%A6%96%E5%85%88%E6%98%AF%E4%BC%A4%E5%AE%B3%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F%EF%BC%8C%E8%B5%9B%E5%B0%94%E5%8F%B7%E4%BC%A4%E5%AE%B3%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F%E6%98%AF%EF%BC%9A%20%5B%20%28%E6%94%BB%E5%87%BB%E6%96%B9%E7%9A%84%E7%AD%89%E7%BA%A7%C3%970.4%2B2%29%C3%97%E6%8A%80%E8%83%BD%E5%A8%81%E5%8A%9B%C3%97%E6%94%BB%E5%87%BB%E6%96%B9%E7%9A%84%E6%94%BB%E5%87%BB%C3%B7%E9%98%B2%E5%BE%A1%E6%96%B9%E7%9A%84%E9%98%B2%E5%BE%A1%C3%B750%2B2%5D%C3%97%E6%9C%AC%E7%B3%BB%E4%BF%AE%E6%AD%A3%C3%97%E5%85%8B%E5%88%B6%E7%B3%BB%E6%95%B0%C3%97,%28217~255%29%C3%B7255%20%E7%94%B1%E8%BF%99%E4%B8%80%E4%B8%B2%E5%85%AC%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%87%BA%E7%9A%84%E4%BC%A4%E5%AE%B3%E8%A2%AB%E7%A7%B0%E4%B8%BA%E8%A3%B8%E4%BC%A4%EF%BC%8C%E8%80%8C%E6%88%91%E6%B5%8B%E8%AF%95%E7%9A%84%E6%8A%80%E8%83%BD%E5%90%8E%E7%BB%AD%E7%9A%84%E5%A2%9E%E4%BC%A4%E5%87%8F%E4%BC%A4%E9%83%BD%E6%98%AF%E5%9C%A8%E8%A3%B8%E4%BC%A4%E5%9F%BA%E7%A1%80%E4%B8%8A%E9%80%9A%E8%BF%87%E7%AE%80%E5%8D%95%E5%9C%B0%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E8%AE%A1%E7%AE%97%E5%BE%97%E5%88%B0%E3%80%82%20%E8%80%8C%E5%8A%A0%E5%87%8F%E5%92%8C%E4%B9%98%E9%99%A4%E4%B9%8B%E9%97%B4%E7%9A%84%E8%AE%A1%E7%AE%97%E5%B0%B1%E4%BC%9A%E4%BA%A7%E7%94%9F%E8%AE%A1%E7%AE%97%E7%9A%84%E5%85%88%E5%90%8E%E9%A1%BA%E5%BA%8F%E9%97%AE%E9%A2%98%EF%BC%8C%E5%AF%B9%E5%BA%94%E7%9A%84%E5%B0%B1%E6%98%AF%E5%A2%9E%E4%BC%A4%E5%87%8F%E4%BC%A4%E6%89%80%E5%A4%84%E7%9A%84%E8%8A%82%E7%82%B9%E5%85%88%E5%90%8E%E3%80%82">我要飞的更高111大佬的帖子</a></p>
]]></content>
      <categories>
        <category>游戏杂谈</category>
      </categories>
      <tags>
        <tag>赛尔号</tag>
      </tags>
  </entry>
  <entry>
    <title>c++入门</title>
    <url>/2025/03/14/57/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="复合类型"><a href="#复合类型" class="headerlink" title="复合类型"></a>复合类型</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>typename arrayname[arraysize]</p>
<p>数组被称为复合类型，因为是使用其他类型创建的。(c语言使用术语“派生类型”)</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">float loans[20];</span><br></pre></td></tr></table></figure>

<p>loans类型叫做“float数组”。</p>
<p><img src="/../images/QQ20250316-100934.png" alt="QQ20250316-100934"></p>
<p>数组初始化时，如果只对一部分初始化，编译器将其他元素设置为零。</p>
<p>如果初始化时[]为空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">short things[]=&#123;1,5,3,8&#125;;</span><br></pre></td></tr></table></figure>

<p>编译器使things包含四个元素。</p>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="c-风格字符串基本功能"><a href="#c-风格字符串基本功能" class="headerlink" title="c-风格字符串基本功能"></a>c-风格字符串基本功能</h3><p>存储在char数组中，c-风格字符串以空字符结尾，空字符结尾为\0.其ASCII码为0。尽量避免将不是字符串的字符数组当做字符串处理。数组表达字符串也可以这样表达。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">char bird[11]=&quot;Mr.Cheeps&quot;;</span><br><span class="line">char fish[]=&quot;Bubbles&quot;</span><br></pre></td></tr></table></figure>

<p>引号括起的字符串自带结尾空字符。</p>
<p><img src="/../images/QQ20250316-104332.png" alt="QQ20250316-104332"></p>
<p>注：字符串常量（使用双引号）不能与字符常量（使用单引号）互换。字符常量’S’在ASCII系统中，只是83的另一种写法，而“S”代表的是（字符S和\0）组成的字符串。“S”实际上是字符串所在地址。由于地址是一种独立的类型，所以c++禁止将地址赋值。</p>
<h3 id="c-风格字符串操作"><a href="#c-风格字符串操作" class="headerlink" title="c-风格字符串操作"></a>c-风格字符串操作</h3><p>strlen()：计算字符串的长度</p>
<p>strcpy()：复制字符串。</p>
<p>strcat()：连接两个字符串。</p>
<p>sort()：对数组进行排序。</p>
<p>search()：在数组或字符串中搜索特定元素或字符。</p>
<h1 id="循环及其表达式"><a href="#循环及其表达式" class="headerlink" title="循环及其表达式"></a>循环及其表达式</h1><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><h3 id="for循环组成"><a href="#for循环组成" class="headerlink" title="for循环组成"></a>for循环组成</h3><p>for(initialization; test-expression; update-expression)</p>
<p>​    body</p>
<p>循环体可以包含一条语句，也可以使用复合语句或代码块包含多条语句。</p>
<p>test-expression（测试表达式）决定循环体是否被执行。update-expression(更新表达式)。</p>
<p>c与c++不同之处在于，c++可在initialization处直接声明变量。但上述for语句因不适用原来的句法，最初只是定义了新的表达式-声明语句表达式来合法化，现在for句法修改如下：</p>
<p>for(for-init-statement condition;expression statement)(其实没差，为了满足语句和表达式的差异，由于for-init-statement condition自带;所以就没有了特意定义新的表达式问题)。</p>
<h3 id="递增运算符（-）和递减运算符（–）"><a href="#递增运算符（-）和递减运算符（–）" class="headerlink" title="递增运算符（++）和递减运算符（–）"></a>递增运算符（++）和递减运算符（–）</h3><p>++c;   c++;存在两种写法。虽然两者对于操作数一致但是影响的时间不同。</p>
<p>为了方便解释++、–运算符生效规定。需要引入副作用和顺序点的概念。副作用指的是计算表达式时对某些东西进行了修改；顺序点是程序执行的一个点。在c++中，一个“;”就是一个顺序点。此外，任何完整表达式的末尾也是一个顺序点。</p>
<p>例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while(guests++&lt;10)&#123;</span><br><span class="line">    cout&lt;&lt;guests&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，输出的guests是在while循环语句中执行了++的guests。其次++通过使用后缀形式，确保guests先与10进行比较后再讲值加1。</p>
<p>应该尽量避免的代码形式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">y=(4+x++)+(6+x++);</span><br></pre></td></tr></table></figure>

<p>上文讨论过，以；为顺序点，所以在计算过程中x的值什么时候发生改变是无法判断的。所以执行程序时可能会出现未知问题。</p>
<h3 id="c-风格字符串比较"><a href="#c-风格字符串比较" class="headerlink" title="c-风格字符串比较"></a>c-风格字符串比较</h3><p>若word为数组名</p>
<p>word&#x3D;&#x3D;”mate”并非预想中进行工作。因为数组名是数组的地址。引号括起的字符串常量也是地址，所以上述并非字符串比较，而是地址比较。所以即使是相同字符串其地址仍不相同。</p>
<p>如果要进行字符串的比较，需要用strcmp()函数解决。函数可接受二者地址为参数，这说明参数可以是指针、字符串常量或字符数组名。实际上strcmp函数是通过比较每个字符的ASCII码返回差值确定最终输出的，所以比较的不是字符串的长度问题，而是字符串总字符编码差。</p>
<h3 id="比较string类字符串"><a href="#比较string类字符串" class="headerlink" title="比较string类字符串"></a>比较string类字符串</h3><p>与c-风格字符串不同，string类字符串实现了重载运算符，可直接用”&#x3D;&#x3D;” “!&#x3D;”进行判断，相比上述更简单直观。</p>
<h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>while(test-condition)</p>
<p>​    body</p>
<p><img src="/../images/QQ20250315-112559.png" alt="QQ20250315-112559"></p>
<h3 id="for与while"><a href="#for与while" class="headerlink" title="for与while"></a>for与while</h3><p>二者几乎等效，对于任意的while循环，可以改写为for循环形式。</p>
<p>while(test-expression)</p>
<p>​    body</p>
<p>for(;test-expression;)</p>
<p>​    body</p>
<p>for与while区别主要在于continue语句。但默认无法知道确定循环次数时，采用while语句。</p>
<h3 id="延时循环"><a href="#延时循环" class="headerlink" title="延时循环"></a>延时循环</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">long wait=0;</span><br><span class="line">while(wait&lt;10000)</span><br><span class="line">    wait++;</span><br></pre></td></tr></table></figure>

<p>该代码在计算器处理器速度变化，也相应随之改变。此外有些编译器会将wait设为1000，要想实现延时循环，最好用系统时钟完成。</p>
<h4 id="函数clock"><a href="#函数clock" class="headerlink" title="函数clock()"></a>函数clock()</h4><p>需要头文件ctime，</p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>基本语法</tag>
      </tags>
  </entry>
</search>
